{"version":3,"sources":["components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","CartDropdownButton","CustomButton","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","user","selectCurrentUser","history","map","key","id","store","get","axios","url","method","then","response","alert","console","log","catch","error","push"],"mappings":"wlCAEO,IAAMA,EAAwBC,IAAOC,IAAV,KAarBC,EAAiBF,IAAOC,IAAV,KASdE,EAAgBH,IAAOI,KAAV,KAObC,EAAoBL,YAAOG,EAAPH,CAAH,KAUjBM,EAAwBN,IAAOC,IAAV,KCGnBM,cACb,MAPyB,SAAAC,GAAQ,MAAK,CACtCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG3BH,EA3BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACE,kBAACnB,EAAD,KACE,kBAACG,EAAD,KACE,yBAAKiB,IAAKH,EAAUI,IAAI,UAE1B,kBAACjB,EAAD,KAAgBY,GAChB,kBAACV,EAAD,KACE,yBAAKgB,QAAS,kBAAMR,EAAWC,KAA/B,UACA,8BAAOI,GACP,yBAAKG,QAAS,kBAAMT,EAAQE,KAA5B,WAEF,kBAACX,EAAD,KAAgBc,GAChB,kBAACX,EAAD,CAAuBe,QAAS,kBAAMZ,EAAUK,KAAhD,c,w9CC3BC,IAAMQ,EAAwBtB,IAAOC,IAAV,KAgBrBsB,EAA0BvB,IAAOC,IAAV,KAQvBuB,EAAuBxB,IAAOC,IAAV,KAcpBwB,EAAiBzB,IAAOC,IAAV,KA6BdyB,GAvBmB1B,IAAOC,IAAV,KASQD,IAAOC,IAAV,KAcAD,YAAO2B,IAAP3B,CAAH,MCiFzB4B,EAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,IACPC,KAAMC,MAGO5B,sBAAQqB,EAARrB,EA7HM,SAAC,GAAyC,IAAvCuB,EAAsC,EAAtCA,UAAWM,EAA2B,EAA3BA,QAASJ,EAAkB,EAAlBA,MAAkB,EAAXE,KA8EjD,OACA,kBAACZ,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,0CAEF,kBAACA,EAAD,KACE,8CAEF,kBAACA,EAAD,KACE,2CAEF,kBAACA,EAAD,KACE,wCAEF,kBAACA,EAAD,KACE,0CAGHM,EAAUO,KAAI,SAAAvB,GAAQ,OACrB,kBAAC,EAAD,CAAcwB,IAAKxB,EAASyB,GAAIzB,SAAUA,OAE5C,kBAACW,EAAD,qBAAyBO,GAEzB,kBAACN,EAAD,CACAL,QAAS,WAnGHmB,IAAMC,IAAI,UAKZC,IAAM,CACJC,IAAK,OACLC,OAAQ,SAKTC,MAAK,SAACC,GACLC,MAAM,uBACNC,QAAQC,IAAIH,MACbI,OAAM,SAACC,GACNH,QAAQC,IAAR,kBAAuBE,IACvBJ,MAAM,2BAhBRX,EAAQgB,KAAK,aAiGjB","file":"static/js/10.613d85f9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem\r\n} from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer\r\n} from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt='item' />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n        <span>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </QuantityContainer>\r\n      <TextContainer>{price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearItem: item => dispatch(clearItemFromCart(item)),\r\n  addItem: item => dispatch(addItem(item)),\r\n  removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CheckoutItem);","import styled from 'styled-components';\r\n// import CustomButton from '../custom-button/custom-button.component';\r\nimport CustomButton from '../../components/custom-button/custom-button.component'\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;\r\n\r\n\r\n\r\nexport const CartDropdownContainer = styled.div`\r\n  position: absolute;\r\n  width: 240px;\r\n  height: 340px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  top: 90px;\r\n  right: 40px;\r\n  z-index: 5;\r\n`;\r\n\r\nexport const CartDropdownButton = styled(CustomButton)`\r\n  margin-top: auto;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport store from 'store'\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\nimport firebase,{firestore} from '../../firebase/firebase.utils'\r\nimport swal from '@sweetalert/with-react';\r\nimport axios from 'axios'\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal\r\n} from '../../redux/cart/cart.selectors';\r\n\r\nimport {\r\n  selectCurrentUser\r\n} from '../../redux/user/user.selectors'\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  CartDropdownContainer,\r\n  CartDropdownButton\r\n} from './checkout.styles';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CheckoutPage = ({ cartItems, history, total, user }) => {\r\n\r\n  const handleSubmit = () => {\r\n      // alert('pikabuuu')\r\n      if(!store.get('userId')) {\r\n        history.push('/signin');\r\n      }else {\r\n\r\n\r\n        axios({\r\n          url: 'test',\r\n          method: 'post'\r\n          // data: {\r\n          //     amount: priceForStripe,\r\n          //     token: token\r\n          // }\r\n      }).then((response) => {\r\n          alert('Payment Successful!')\r\n          console.log(response)\r\n      }).catch((error) => {\r\n          console.log(` Error: ${error}`)\r\n          alert('There was an issue !')\r\n      })\r\n\r\n\r\n\r\n        // const mongoose = require('mongoose')\r\n        // mongoose.connect('mongodb+srv://level9Nine99:shwdbhgAHGF$$@cluster0.mygli.mongodb.net/order?retryWrites=true&w=majority', {\r\n        //   useNewUrlParser: true, useCreateIndex: true\r\n        // }).then(() => {\r\n        //   console.log('MongoDB Connectedâ€¦')\r\n        // })\r\n        // .catch(err => console.log(err))\r\n\r\n\r\n\r\n\r\n        // console.log(user)\r\n\r\n        \r\n        //   const userID = store.get('userId').id\r\n        //   const userRef = firestore.doc(`orders/${userID}`)\r\n        //   const snapShot =  userRef.get()\r\n\r\n        //   snapShot.then(function(snapShot) { \r\n        //       if(!snapShot.exists){ \r\n        //           try {\r\n        //             userRef.set({\r\n        //               //  sharedWith: [{ who: \"third@test.com\", when: new Date() }] \r\n        //               // items: [ { who: \"third@test.com\" } ]\r\n        //               list: [{\r\n        //                 userDetails: user,\r\n        //                 cartDetails : cartItems\r\n        //               }] \r\n        //           })\r\n\r\n\r\n        //           swal({\r\n        //             title: \"Order Placed!\",\r\n        //             text: \"Please Wait!\",\r\n        //             icon: \"success\",\r\n        //             buttons: false,\r\n        //             timer: 5000,\r\n        //           });\r\n\r\n\r\n\r\n        //           }catch(error) {\r\n        //               console.log('error checking outta item ->   ', error.message)\r\n        //           }\r\n        //       }\r\n        //   })\r\n\r\n      \r\n\r\n      }\r\n  }\r\n  \r\n  return (\r\n  <CheckoutPageContainer>\r\n    <CheckoutHeaderContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Product</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Description</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Quantity</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Price</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Remove</span>\r\n      </HeaderBlockContainer>\r\n    </CheckoutHeaderContainer>\r\n    {cartItems.map(cartItem => (\r\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n    ))}\r\n    <TotalContainer>TOTAL: â‚¹{total}</TotalContainer>\r\n    \r\n    <CartDropdownButton\r\n    onClick={() => handleSubmit()}\r\n    >\r\n       BUY NOW\r\n    </CartDropdownButton>\r\n  </CheckoutPageContainer>\r\n)}\r\n\r\n\r\n/*\r\n<WarningContainer>\r\n      *Please use the following test credit card for payments*\r\n      <br />\r\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n    </WarningContainer>\r\n     <StripeCheckoutButton price={total} />\r\n*/\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n  user: selectCurrentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}