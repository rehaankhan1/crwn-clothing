{"version":3,"sources":["pages/sign-in-and-sign-up-page/sign-in-and-sign-up.styles.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in-component.jsx","components/sign-up-component/sign-up-component.jsx","pages/sign-in-and-sign-up-page/sign-in-and-sign-up-page.jsx"],"names":["SignInAndSignUpContainer","styled","div","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","shrinkLabelStyles","css","GroupContainer","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredential","setCredentials","handleSubmit","event","a","preventDefault","swal","title","text","icon","buttons","timer","target","name","onSubmit","type","required","onClick","isGoogleSignIn","signUpStart","displayName","confirmPassword","phoneNum","address","postal","userCredentials","setUserCredentials","SignInAndSignUpPage"],"mappings":"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","file":"static/js/6.e721f494.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n  width: 850px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    width: unset;\r\n    align-items: center;\r\n    > *:first-child {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport swal from '@sweetalert/with-react';\r\nimport './sign-in-component.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\r\n\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\r\n   const [userCredential,  setCredentials] = useState({email:'', password:''})\r\n\r\n   const { email, password } = userCredential\r\n   const  handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        swal({\r\n            title: \"Loading!\",\r\n            text: \"Please Wait!\",\r\n            icon: \"info\",\r\n            buttons: false,\r\n            timer: 5000,\r\n          });\r\n          \r\n\r\n\r\n        //const {emailSignInStart} = this.props\r\n        emailSignInStart(email, password)\r\n       \r\n    }\r\n\r\n   const  handleChange = (event) => {\r\n        const  {  value,name  } = event.target\r\n\r\n        //we will update the existing value to new one rather than setting new\r\n        setCredentials({...userCredential, [name]: value})\r\n    }\r\n\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign In with your Email and Password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput name='email' label='Email' type='email' \r\n                    value={email} handleChange={handleChange} required />\r\n                   \r\n                    <FormInput name='password' label='Password' type='password' \r\n                    value={password} handleChange={handleChange} required />\r\n                   \r\n                    <div className='buttons'>\r\n                    <CustomButton type='submit'> Sign in</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn> \r\n                    Sign in with Google </CustomButton>\r\n                    </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>  dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport swal from '@sweetalert/with-react';\r\nimport './sign-up-component.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\n//import {  auth, createUserProfileDocument  } from '../../firebase/firebase.utils'\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions'\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: '',\r\n        phoneNum: '',\r\n        postal: '',\r\n        address: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const { displayName,  email,  password,  confirmPassword,  phoneNum,  address, postal } = userCredentials\r\n\r\n  const  handleSubmit = async event => {\r\n\r\n    swal({\r\n        title: \"Loading!\",\r\n        text: \"Please Wait!\",\r\n        icon: \"info\",\r\n        buttons: false,\r\n        timer: 5000,\r\n      });\r\n\r\n        event.preventDefault();\r\n\r\n        \r\n      \r\n        if(password !== confirmPassword){\r\n                // alert(\"Password don't match!\")\r\n                swal({\r\n                    title: \"Error!\",\r\n                    text: \"Password don't match!\",\r\n                    icon: \"error\",\r\n                    buttons: false,\r\n                    timer: 5000,\r\n                  });\r\n                return;\r\n        }\r\n\r\n        signUpStart(displayName,  email,  password, confirmPassword, phoneNum,  address, postal)\r\n\r\n    }\r\n\r\n\r\n  const  handleChange = event => {\r\n        const {name, value} = event.target;\r\n        setUserCredentials({  ...userCredentials,  [name]: value})\r\n    }\r\n\r\n    \r\n        // const { displayName,  email,  password,  confirmPassword   } = this.state;\r\n        return (\r\n            <div className='signup'>\r\n                <h2 className='title'>I do not have a account.</h2>\r\n                <span>Sign Up with your email and password</span>\r\n\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        label='Display Name'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput \r\n                        type='number'\r\n                        name='phoneNum'\r\n                        value={phoneNum}\r\n                        onChange={handleChange}\r\n                        label='Phone Number'\r\n                        required\r\n                    />\r\n\r\n                    <FormInput \r\n                        type='text'\r\n                        name='address'\r\n                        value={address}\r\n                        onChange={handleChange}\r\n                        label='Address'\r\n                        required\r\n                    />\r\n\r\n\r\n                    <FormInput \r\n                        type='text'\r\n                        name='postal'\r\n                        value={postal}\r\n                        onChange={handleChange}\r\n                        label='Postal Code'\r\n                        required\r\n                    />\r\n\r\n\r\n                    <FormInput \r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='Email'\r\n                        required\r\n                    />\r\n                    <FormInput \r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n                    <FormInput \r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label='confirmPassword'\r\n                        required\r\n                    />\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    \r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (displayName,  email,  password,  confirmPassword, phoneNum,  address, postal) => dispatch(signUpStart({displayName,  email,  password,  confirmPassword, phoneNum,  address, postal}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)\r\n","import React from 'react'\r\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\r\nimport SignIn from '../../components/sign-in/sign-in-component'\r\nimport SignUp from '../../components/sign-up-component/sign-up-component'\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <SignInAndSignUpContainer>\r\n    <SignIn />\r\n    <SignUp />\r\n  </SignInAndSignUpContainer>\r\n);\r\n\r\nexport default SignInAndSignUpPage;"],"sourceRoot":""}